name: GitHubActions-Demo
'on':
  push:
    branches:
      - main
jobs:
  build_release:
    runs-on: ubuntu-latest
    name: build_release
    steps:
      - uses: actions/checkout@v2
      - name: Checkout
        with:
          node-version: 14.x
        uses: actions/setup-node@v2
      - name: SonarQube
        with:
          args: >-
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY  }} -Dsonar.sources=.
            -Dsonar.css.node=. -Dsonar.host.url=${{ env.SONAR_URL  }}
            -Dsonar.login=${{ env.SONAR_TOKEN  }}
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_URL: https://sonarqube.ness-ie-practice.com
          SONAR_PROJECT_KEY: react-shopping-cart
          SONAR_TOKEN: afa3388a02a9966c446ba10461ee2ef5aa5eca40
      - name: package
        run: |
          npm install && REACT_APP_ENVIRONMENT=production npm run build
      - name: Check Marx
        run: |-
          echo "Started Scanning"
                  echo 'Security Scanning Started....'
                  echo 'Security Completed'
      - name: Fortify
        run: |-
          echo "Started Scanning"
                  echo 'Security Scanning Started....'
                  echo 'Security Completed'
      - name: Amazon S3
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_ACCESS_KEY_ID: AKIAS6YU7IZMJ2MRODJS
          AWS_SECRET_ACCESS_KEY: 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
        run: aws s3 sync build/ s3://demo-app-react
      - name: Amazon Cloud Front
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_ACCESS_KEY_ID: AKIAS6YU7IZMJ2MRODJS
          AWS_SECRET_ACCESS_KEY: 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
        run: >-
          CFID=$(aws cloudfront list-distributions --query
          "DistributionList.Items[?Aliases.Items!=null] |
          [?contains(Aliases.Items, 'awsshoppingcart.ness-ie-practice.com')].Id
          | [0]" | tr -d '"')
                                          INVID=$(aws cloudfront create-invalidation --distribution-id $CFID --paths "/*" | jq -r .Invalidation.Id)
                                          INVWT=$(aws cloudfront wait invalidation-completed --distribution-id $CFID --id $INVID)
                                          echo ${INVWT}
